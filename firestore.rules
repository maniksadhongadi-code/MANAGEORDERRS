/**
 * @file Firestore Security Rules
 * @description This ruleset prioritizes preventing customer hard deletions, using soft deletes via `isArchived`.
 *
 * Data Structure:
 * - /customers/{customerId}: Stores customer data, including status, status history, and archive status.
 *
 * Key Security Decisions:
 * - Customer documents are not meant to be deleted, so a "soft delete" approach with `isArchived` is enforced, but hard deletes are denied.
 * - No user listing of the customer collection is allowed, as this could expose sensitive data.
 * - Only authenticated users are authorized to modify customer data.
 *
 * Denormalization for Authorization:
 * - Not applicable in this simple case.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Protects the /customers/{customerId} collection.
     * @path /customers/{customerId}
     * @allow (create, update) - Authenticated user can create/update a customer.
     * @deny (delete) - No one can delete a customer document. Only soft deletes via isArchived are allowed
     * @deny (list) - No one can list the customer document.
     * @principle Enforces authenticated access for customer operations and prevents deletion.
     */
    match /customers/{customerId} {
      allow get: if isSignedIn();
      allow list: if false;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if false;
    }

    // Define helper functions
    function isSignedIn() {
      return request.auth != null;
    }
  }
}